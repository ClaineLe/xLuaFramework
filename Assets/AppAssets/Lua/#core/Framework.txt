local CSManager = CS.Framework.Game.Manager

Framework = {
    m_AppFacade,
    m_Coroutiner,
	m_LuaMgr,
    m_AssetMgr,
    m_TimerMgr,
    m_SoundMgr,
    m_PoolsMgr,
    m_NetWorkMgr,
    m_LevenMgr,
    m_EventMgr,
    m_ViewMgr,
    m_ModelMgr,
}



function Framework:PreLoadLua()

    require '#core.FrameworkDefine'
    require '#core.#model.BaseModel'
    require '#core.#model.ModelFactory'
    require '#core.options.ViewManagerOption'

    require '#core.view.BaseView'
    require '#core.view.BasePresender'
    require '#core.view.ViewFactory'
    require '#core.CommonView'
    require '#core.scene.LoginScene'
    require '#core.scene.MainScene'
    require '#core.SceneFactory'

end

function Framework:LoadLuaScript()
    require 'util.ProtBufUtility'
    require 'util.FrameworkUtility'
end

function Framework:Requires( )
    self.m_Coroutiner = require 'util.Coroutiner'
end

function Framework:GetManagers()
    self.m_LuaMgr 		= CSManager.LuaMgr
	self.m_AssetMgr 	= CSManager.AssetMgr
	self.m_TimerMgr 	= CSManager.TimerMgr
	self.m_SoundMgr 	= CSManager.SoundMgr
	self.m_PoolsMgr 	= CSManager.PoolsMgr
	self.m_NetWorkMgr 	= CSManager.NetWorkMgr
	self.m_LevenMgr		= CSManager.LevenMgr
	self.m_EventMgr		= CSManager.EventMgr
    self.m_ViewMgr      = CSManager.ViewMgr
    self.m_ModelMgr     = CSManager.ModelMgr
    self.m_SceneMgr     = CSManager.SceneMgr
end

function Framework:Start(appFacade)
    self.m_AppFacade = appFacade
    self:PreLoadLua()
    self:Requires()
    self:LoadLuaScript()
    self:GetManagers()
    self:Option()
    self:StartUp()
end

function Framework:Option()
   self:ViewManagerOption()
end

function Framework:Tick()
    --print("Framework:Tick")
end

function Framework:Release()
	--print("Framework:Release")
end

function Framework:StartUp()
    print("Framework:StartUp")

    CommonView:Init()
    SceneFactory:Init()

    SceneFactory:LoadSceneAsync(SceneDefine.Login)
    
    --local loginModel = ModelFactory:CreateModel(ModelDefine.Login)
    --Framework.m_ModelMgr:ActiveModel(1,"LoginModel")


    --local loginModelTmp = require('model.LoginModel')
    --local loginModel = loginModelTmp:Create()

end

function Framework:InitCommonView()
    -- body
end

function Framework:RunCoroutine( ... )
    return self.m_AppFacade:StartCoroutine(self.m_Coroutiner.cs_generator(...))
end

function Framework:StopCoroutine(coroutine)
    self.m_AppFacade:StopCoroutine(coroutine)
end

return Framework






